//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LifeRayWebServicesExample.LiferayUserService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:http.service.portal.liferay.com", ConfigurationName="LiferayUserService.UserServiceSoap")]
    public interface UserServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getUserByIdReturn")]
        LifeRayWebServicesExample.LiferayUserService.UserSoap getUserById(long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getDefaultUserIdReturn")]
        long getDefaultUserId(long companyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void addGroupUsers(long groupId, long[] userIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void addOrganizationUsers(long organizationId, long[] userIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void addPasswordPolicyUsers(long passwordPolicyId, long[] userIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void addRoleUsers(long roleId, long[] userIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void addUserGroupUsers(long userGroupId, long[] userIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="addUserReturn")]
        LifeRayWebServicesExample.LiferayUserService.UserSoap addUser(
                    long companyId, 
                    bool autoPassword, 
                    string password1, 
                    string password2, 
                    bool autoScreenName, 
                    string screenName, 
                    string emailAddress, 
                    string locale, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    int prefixId, 
                    int suffixId, 
                    bool male, 
                    int birthdayMonth, 
                    int birthdayDay, 
                    int birthdayYear, 
                    string jobTitle, 
                    long[] organizationIds, 
                    bool sendEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void deleteRoleUser(long roleId, long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void deleteUser(long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getUserByEmailAddressReturn")]
        LifeRayWebServicesExample.LiferayUserService.UserSoap getUserByEmailAddress(long companyId, string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getUserByScreenNameReturn")]
        LifeRayWebServicesExample.LiferayUserService.UserSoap getUserByScreenName(long companyId, string screenName);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getUserIdByEmailAddressReturn")]
        long getUserIdByEmailAddress(long companyId, string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getUserIdByScreenNameReturn")]
        long getUserIdByScreenName(long companyId, string screenName);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="hasGroupUserReturn")]
        bool hasGroupUser(long groupId, long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="hasRoleUserReturn")]
        bool hasRoleUser(long roleId, long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void setRoleUsers(long roleId, long[] userIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void setUserGroupUsers(long userGroupId, long[] userIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void unsetGroupUsers(long groupId, long[] userIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void unsetOrganizationUsers(long organizationId, long[] userIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void unsetPasswordPolicyUsers(long passwordPolicyId, long[] userIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void unsetRoleUsers(long roleId, long[] userIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void unsetUserGroupUsers(long userGroupId, long[] userIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="updateActiveReturn")]
        LifeRayWebServicesExample.LiferayUserService.UserSoap updateActive(long userId, bool active);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="updateAgreedToTermsOfUseReturn")]
        LifeRayWebServicesExample.LiferayUserService.UserSoap updateAgreedToTermsOfUse(long userId, bool agreedToTermsOfUse);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="updateLockoutReturn")]
        LifeRayWebServicesExample.LiferayUserService.UserSoap updateLockout(long userId, bool lockout);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void updateOrganizations(long userId, long[] organizationIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="updatePasswordReturn")]
        LifeRayWebServicesExample.LiferayUserService.UserSoap updatePassword(long userId, string password1, string password2, bool passwordReset);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void updatePortrait(long userId, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] byte[] bytes);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void updateScreenName(long userId, string screenName);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void updateOpenId(long userId, string openId);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="updateUserReturn")]
        LifeRayWebServicesExample.LiferayUserService.UserSoap updateUser(
                    long userId, 
                    string oldPassword, 
                    string newPassword1, 
                    string newPassword2, 
                    bool passwordReset, 
                    string screenName, 
                    string emailAddress, 
                    string languageId, 
                    string timeZoneId, 
                    string greeting, 
                    string comments, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    int prefixId, 
                    int suffixId, 
                    bool male, 
                    int birthdayMonth, 
                    int birthdayDay, 
                    int birthdayYear, 
                    string smsSn, 
                    string aimSn, 
                    string facebookSn, 
                    string icqSn, 
                    string jabberSn, 
                    string msnSn, 
                    string mySpaceSn, 
                    string skypeSn, 
                    string twitterSn, 
                    string ymSn, 
                    string jobTitle, 
                    long[] organizationIds);
        
        // CODEGEN: Generating message contract since the wrapper name (updateUser) of message updateUserRequest1 does not match the default value (updateUser1)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        LifeRayWebServicesExample.LiferayUserService.updateUserResponse1 updateUser1(LifeRayWebServicesExample.LiferayUserService.updateUserRequest1 request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://model.portal.liferay.com")]
    public partial class UserSoap : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool activeField;
        
        private bool agreedToTermsOfUseField;
        
        private string commentsField;
        
        private long companyIdField;
        
        private long contactIdField;
        
        private System.Nullable<System.DateTime> createDateField;
        
        private bool defaultUserField;
        
        private string emailAddressField;
        
        private int failedLoginAttemptsField;
        
        private int graceLoginCountField;
        
        private string greetingField;
        
        private string languageIdField;
        
        private System.Nullable<System.DateTime> lastFailedLoginDateField;
        
        private System.Nullable<System.DateTime> lastLoginDateField;
        
        private string lastLoginIPField;
        
        private bool lockoutField;
        
        private System.Nullable<System.DateTime> lockoutDateField;
        
        private System.Nullable<System.DateTime> loginDateField;
        
        private string loginIPField;
        
        private System.Nullable<System.DateTime> modifiedDateField;
        
        private string openIdField;
        
        private string passwordField;
        
        private bool passwordEncryptedField;
        
        private System.Nullable<System.DateTime> passwordModifiedDateField;
        
        private bool passwordResetField;
        
        private long portraitIdField;
        
        private long primaryKeyField;
        
        private string screenNameField;
        
        private string timeZoneIdField;
        
        private long userIdField;
        
        private string uuidField;
        
        /// <remarks/>
        public bool active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
                this.RaisePropertyChanged("active");
            }
        }
        
        /// <remarks/>
        public bool agreedToTermsOfUse {
            get {
                return this.agreedToTermsOfUseField;
            }
            set {
                this.agreedToTermsOfUseField = value;
                this.RaisePropertyChanged("agreedToTermsOfUse");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
                this.RaisePropertyChanged("comments");
            }
        }
        
        /// <remarks/>
        public long companyId {
            get {
                return this.companyIdField;
            }
            set {
                this.companyIdField = value;
                this.RaisePropertyChanged("companyId");
            }
        }
        
        /// <remarks/>
        public long contactId {
            get {
                return this.contactIdField;
            }
            set {
                this.contactIdField = value;
                this.RaisePropertyChanged("contactId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> createDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
                this.RaisePropertyChanged("createDate");
            }
        }
        
        /// <remarks/>
        public bool defaultUser {
            get {
                return this.defaultUserField;
            }
            set {
                this.defaultUserField = value;
                this.RaisePropertyChanged("defaultUser");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string emailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
                this.RaisePropertyChanged("emailAddress");
            }
        }
        
        /// <remarks/>
        public int failedLoginAttempts {
            get {
                return this.failedLoginAttemptsField;
            }
            set {
                this.failedLoginAttemptsField = value;
                this.RaisePropertyChanged("failedLoginAttempts");
            }
        }
        
        /// <remarks/>
        public int graceLoginCount {
            get {
                return this.graceLoginCountField;
            }
            set {
                this.graceLoginCountField = value;
                this.RaisePropertyChanged("graceLoginCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string greeting {
            get {
                return this.greetingField;
            }
            set {
                this.greetingField = value;
                this.RaisePropertyChanged("greeting");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string languageId {
            get {
                return this.languageIdField;
            }
            set {
                this.languageIdField = value;
                this.RaisePropertyChanged("languageId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> lastFailedLoginDate {
            get {
                return this.lastFailedLoginDateField;
            }
            set {
                this.lastFailedLoginDateField = value;
                this.RaisePropertyChanged("lastFailedLoginDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> lastLoginDate {
            get {
                return this.lastLoginDateField;
            }
            set {
                this.lastLoginDateField = value;
                this.RaisePropertyChanged("lastLoginDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string lastLoginIP {
            get {
                return this.lastLoginIPField;
            }
            set {
                this.lastLoginIPField = value;
                this.RaisePropertyChanged("lastLoginIP");
            }
        }
        
        /// <remarks/>
        public bool lockout {
            get {
                return this.lockoutField;
            }
            set {
                this.lockoutField = value;
                this.RaisePropertyChanged("lockout");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> lockoutDate {
            get {
                return this.lockoutDateField;
            }
            set {
                this.lockoutDateField = value;
                this.RaisePropertyChanged("lockoutDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> loginDate {
            get {
                return this.loginDateField;
            }
            set {
                this.loginDateField = value;
                this.RaisePropertyChanged("loginDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string loginIP {
            get {
                return this.loginIPField;
            }
            set {
                this.loginIPField = value;
                this.RaisePropertyChanged("loginIP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> modifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
                this.RaisePropertyChanged("modifiedDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string openId {
            get {
                return this.openIdField;
            }
            set {
                this.openIdField = value;
                this.RaisePropertyChanged("openId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("password");
            }
        }
        
        /// <remarks/>
        public bool passwordEncrypted {
            get {
                return this.passwordEncryptedField;
            }
            set {
                this.passwordEncryptedField = value;
                this.RaisePropertyChanged("passwordEncrypted");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> passwordModifiedDate {
            get {
                return this.passwordModifiedDateField;
            }
            set {
                this.passwordModifiedDateField = value;
                this.RaisePropertyChanged("passwordModifiedDate");
            }
        }
        
        /// <remarks/>
        public bool passwordReset {
            get {
                return this.passwordResetField;
            }
            set {
                this.passwordResetField = value;
                this.RaisePropertyChanged("passwordReset");
            }
        }
        
        /// <remarks/>
        public long portraitId {
            get {
                return this.portraitIdField;
            }
            set {
                this.portraitIdField = value;
                this.RaisePropertyChanged("portraitId");
            }
        }
        
        /// <remarks/>
        public long primaryKey {
            get {
                return this.primaryKeyField;
            }
            set {
                this.primaryKeyField = value;
                this.RaisePropertyChanged("primaryKey");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string screenName {
            get {
                return this.screenNameField;
            }
            set {
                this.screenNameField = value;
                this.RaisePropertyChanged("screenName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string timeZoneId {
            get {
                return this.timeZoneIdField;
            }
            set {
                this.timeZoneIdField = value;
                this.RaisePropertyChanged("timeZoneId");
            }
        }
        
        /// <remarks/>
        public long userId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("userId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
                this.RaisePropertyChanged("uuid");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="updateUser1", WrapperNamespace="urn:http.service.portal.liferay.com", IsWrapped=true)]
    public partial class updateUserRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public long userId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string oldPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public bool passwordReset;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string screenName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public string emailAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=5)]
        public string languageId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=6)]
        public string timeZoneId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=7)]
        public string greeting;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=8)]
        public string comments;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=9)]
        public string firstName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=10)]
        public string middleName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=11)]
        public string lastName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=12)]
        public int prefixId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=13)]
        public int suffixId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=14)]
        public bool male;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=15)]
        public int birthdayMonth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=16)]
        public int birthdayDay;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=17)]
        public int birthdayYear;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=18)]
        public string smsSn;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=19)]
        public string aimSn;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=20)]
        public string facebookSn;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=21)]
        public string icqSn;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=22)]
        public string jabberSn;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=23)]
        public string msnSn;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=24)]
        public string mySpaceSn;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=25)]
        public string skypeSn;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=26)]
        public string twitterSn;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=27)]
        public string ymSn;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=28)]
        public string jobTitle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=29)]
        public long[] organizationIds;
        
        public updateUserRequest1() {
        }
        
        public updateUserRequest1(
                    long userId, 
                    string oldPassword, 
                    bool passwordReset, 
                    string screenName, 
                    string emailAddress, 
                    string languageId, 
                    string timeZoneId, 
                    string greeting, 
                    string comments, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    int prefixId, 
                    int suffixId, 
                    bool male, 
                    int birthdayMonth, 
                    int birthdayDay, 
                    int birthdayYear, 
                    string smsSn, 
                    string aimSn, 
                    string facebookSn, 
                    string icqSn, 
                    string jabberSn, 
                    string msnSn, 
                    string mySpaceSn, 
                    string skypeSn, 
                    string twitterSn, 
                    string ymSn, 
                    string jobTitle, 
                    long[] organizationIds) {
            this.userId = userId;
            this.oldPassword = oldPassword;
            this.passwordReset = passwordReset;
            this.screenName = screenName;
            this.emailAddress = emailAddress;
            this.languageId = languageId;
            this.timeZoneId = timeZoneId;
            this.greeting = greeting;
            this.comments = comments;
            this.firstName = firstName;
            this.middleName = middleName;
            this.lastName = lastName;
            this.prefixId = prefixId;
            this.suffixId = suffixId;
            this.male = male;
            this.birthdayMonth = birthdayMonth;
            this.birthdayDay = birthdayDay;
            this.birthdayYear = birthdayYear;
            this.smsSn = smsSn;
            this.aimSn = aimSn;
            this.facebookSn = facebookSn;
            this.icqSn = icqSn;
            this.jabberSn = jabberSn;
            this.msnSn = msnSn;
            this.mySpaceSn = mySpaceSn;
            this.skypeSn = skypeSn;
            this.twitterSn = twitterSn;
            this.ymSn = ymSn;
            this.jobTitle = jobTitle;
            this.organizationIds = organizationIds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="updateUser1Response", WrapperNamespace="urn:http.service.portal.liferay.com", IsWrapped=true)]
    public partial class updateUserResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public LifeRayWebServicesExample.LiferayUserService.UserSoap updateUserReturn;
        
        public updateUserResponse1() {
        }
        
        public updateUserResponse1(LifeRayWebServicesExample.LiferayUserService.UserSoap updateUserReturn) {
            this.updateUserReturn = updateUserReturn;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface UserServiceSoapChannel : LifeRayWebServicesExample.LiferayUserService.UserServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceSoapClient : System.ServiceModel.ClientBase<LifeRayWebServicesExample.LiferayUserService.UserServiceSoap>, LifeRayWebServicesExample.LiferayUserService.UserServiceSoap {
        
        public UserServiceSoapClient() {
        }
        
        public UserServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public LifeRayWebServicesExample.LiferayUserService.UserSoap getUserById(long userId) {
            return base.Channel.getUserById(userId);
        }
        
        public long getDefaultUserId(long companyId) {
            return base.Channel.getDefaultUserId(companyId);
        }
        
        public void addGroupUsers(long groupId, long[] userIds) {
            base.Channel.addGroupUsers(groupId, userIds);
        }
        
        public void addOrganizationUsers(long organizationId, long[] userIds) {
            base.Channel.addOrganizationUsers(organizationId, userIds);
        }
        
        public void addPasswordPolicyUsers(long passwordPolicyId, long[] userIds) {
            base.Channel.addPasswordPolicyUsers(passwordPolicyId, userIds);
        }
        
        public void addRoleUsers(long roleId, long[] userIds) {
            base.Channel.addRoleUsers(roleId, userIds);
        }
        
        public void addUserGroupUsers(long userGroupId, long[] userIds) {
            base.Channel.addUserGroupUsers(userGroupId, userIds);
        }
        
        public LifeRayWebServicesExample.LiferayUserService.UserSoap addUser(
                    long companyId, 
                    bool autoPassword, 
                    string password1, 
                    string password2, 
                    bool autoScreenName, 
                    string screenName, 
                    string emailAddress, 
                    string locale, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    int prefixId, 
                    int suffixId, 
                    bool male, 
                    int birthdayMonth, 
                    int birthdayDay, 
                    int birthdayYear, 
                    string jobTitle, 
                    long[] organizationIds, 
                    bool sendEmail) {
            return base.Channel.addUser(companyId, autoPassword, password1, password2, autoScreenName, screenName, emailAddress, locale, firstName, middleName, lastName, prefixId, suffixId, male, birthdayMonth, birthdayDay, birthdayYear, jobTitle, organizationIds, sendEmail);
        }
        
        public void deleteRoleUser(long roleId, long userId) {
            base.Channel.deleteRoleUser(roleId, userId);
        }
        
        public void deleteUser(long userId) {
            base.Channel.deleteUser(userId);
        }
        
        public LifeRayWebServicesExample.LiferayUserService.UserSoap getUserByEmailAddress(long companyId, string emailAddress) {
            return base.Channel.getUserByEmailAddress(companyId, emailAddress);
        }
        
        public LifeRayWebServicesExample.LiferayUserService.UserSoap getUserByScreenName(long companyId, string screenName) {
            return base.Channel.getUserByScreenName(companyId, screenName);
        }
        
        public long getUserIdByEmailAddress(long companyId, string emailAddress) {
            return base.Channel.getUserIdByEmailAddress(companyId, emailAddress);
        }
        
        public long getUserIdByScreenName(long companyId, string screenName) {
            return base.Channel.getUserIdByScreenName(companyId, screenName);
        }
        
        public bool hasGroupUser(long groupId, long userId) {
            return base.Channel.hasGroupUser(groupId, userId);
        }
        
        public bool hasRoleUser(long roleId, long userId) {
            return base.Channel.hasRoleUser(roleId, userId);
        }
        
        public void setRoleUsers(long roleId, long[] userIds) {
            base.Channel.setRoleUsers(roleId, userIds);
        }
        
        public void setUserGroupUsers(long userGroupId, long[] userIds) {
            base.Channel.setUserGroupUsers(userGroupId, userIds);
        }
        
        public void unsetGroupUsers(long groupId, long[] userIds) {
            base.Channel.unsetGroupUsers(groupId, userIds);
        }
        
        public void unsetOrganizationUsers(long organizationId, long[] userIds) {
            base.Channel.unsetOrganizationUsers(organizationId, userIds);
        }
        
        public void unsetPasswordPolicyUsers(long passwordPolicyId, long[] userIds) {
            base.Channel.unsetPasswordPolicyUsers(passwordPolicyId, userIds);
        }
        
        public void unsetRoleUsers(long roleId, long[] userIds) {
            base.Channel.unsetRoleUsers(roleId, userIds);
        }
        
        public void unsetUserGroupUsers(long userGroupId, long[] userIds) {
            base.Channel.unsetUserGroupUsers(userGroupId, userIds);
        }
        
        public LifeRayWebServicesExample.LiferayUserService.UserSoap updateActive(long userId, bool active) {
            return base.Channel.updateActive(userId, active);
        }
        
        public LifeRayWebServicesExample.LiferayUserService.UserSoap updateAgreedToTermsOfUse(long userId, bool agreedToTermsOfUse) {
            return base.Channel.updateAgreedToTermsOfUse(userId, agreedToTermsOfUse);
        }
        
        public LifeRayWebServicesExample.LiferayUserService.UserSoap updateLockout(long userId, bool lockout) {
            return base.Channel.updateLockout(userId, lockout);
        }
        
        public void updateOrganizations(long userId, long[] organizationIds) {
            base.Channel.updateOrganizations(userId, organizationIds);
        }
        
        public LifeRayWebServicesExample.LiferayUserService.UserSoap updatePassword(long userId, string password1, string password2, bool passwordReset) {
            return base.Channel.updatePassword(userId, password1, password2, passwordReset);
        }
        
        public void updatePortrait(long userId, byte[] bytes) {
            base.Channel.updatePortrait(userId, bytes);
        }
        
        public void updateScreenName(long userId, string screenName) {
            base.Channel.updateScreenName(userId, screenName);
        }
        
        public void updateOpenId(long userId, string openId) {
            base.Channel.updateOpenId(userId, openId);
        }
        
        public LifeRayWebServicesExample.LiferayUserService.UserSoap updateUser(
                    long userId, 
                    string oldPassword, 
                    string newPassword1, 
                    string newPassword2, 
                    bool passwordReset, 
                    string screenName, 
                    string emailAddress, 
                    string languageId, 
                    string timeZoneId, 
                    string greeting, 
                    string comments, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    int prefixId, 
                    int suffixId, 
                    bool male, 
                    int birthdayMonth, 
                    int birthdayDay, 
                    int birthdayYear, 
                    string smsSn, 
                    string aimSn, 
                    string facebookSn, 
                    string icqSn, 
                    string jabberSn, 
                    string msnSn, 
                    string mySpaceSn, 
                    string skypeSn, 
                    string twitterSn, 
                    string ymSn, 
                    string jobTitle, 
                    long[] organizationIds) {
            return base.Channel.updateUser(userId, oldPassword, newPassword1, newPassword2, passwordReset, screenName, emailAddress, languageId, timeZoneId, greeting, comments, firstName, middleName, lastName, prefixId, suffixId, male, birthdayMonth, birthdayDay, birthdayYear, smsSn, aimSn, facebookSn, icqSn, jabberSn, msnSn, mySpaceSn, skypeSn, twitterSn, ymSn, jobTitle, organizationIds);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LifeRayWebServicesExample.LiferayUserService.updateUserResponse1 LifeRayWebServicesExample.LiferayUserService.UserServiceSoap.updateUser1(LifeRayWebServicesExample.LiferayUserService.updateUserRequest1 request) {
            return base.Channel.updateUser1(request);
        }
        
        public LifeRayWebServicesExample.LiferayUserService.UserSoap updateUser1(
                    long userId, 
                    string oldPassword, 
                    bool passwordReset, 
                    string screenName, 
                    string emailAddress, 
                    string languageId, 
                    string timeZoneId, 
                    string greeting, 
                    string comments, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    int prefixId, 
                    int suffixId, 
                    bool male, 
                    int birthdayMonth, 
                    int birthdayDay, 
                    int birthdayYear, 
                    string smsSn, 
                    string aimSn, 
                    string facebookSn, 
                    string icqSn, 
                    string jabberSn, 
                    string msnSn, 
                    string mySpaceSn, 
                    string skypeSn, 
                    string twitterSn, 
                    string ymSn, 
                    string jobTitle, 
                    long[] organizationIds) {
            LifeRayWebServicesExample.LiferayUserService.updateUserRequest1 inValue = new LifeRayWebServicesExample.LiferayUserService.updateUserRequest1();
            inValue.userId = userId;
            inValue.oldPassword = oldPassword;
            inValue.passwordReset = passwordReset;
            inValue.screenName = screenName;
            inValue.emailAddress = emailAddress;
            inValue.languageId = languageId;
            inValue.timeZoneId = timeZoneId;
            inValue.greeting = greeting;
            inValue.comments = comments;
            inValue.firstName = firstName;
            inValue.middleName = middleName;
            inValue.lastName = lastName;
            inValue.prefixId = prefixId;
            inValue.suffixId = suffixId;
            inValue.male = male;
            inValue.birthdayMonth = birthdayMonth;
            inValue.birthdayDay = birthdayDay;
            inValue.birthdayYear = birthdayYear;
            inValue.smsSn = smsSn;
            inValue.aimSn = aimSn;
            inValue.facebookSn = facebookSn;
            inValue.icqSn = icqSn;
            inValue.jabberSn = jabberSn;
            inValue.msnSn = msnSn;
            inValue.mySpaceSn = mySpaceSn;
            inValue.skypeSn = skypeSn;
            inValue.twitterSn = twitterSn;
            inValue.ymSn = ymSn;
            inValue.jobTitle = jobTitle;
            inValue.organizationIds = organizationIds;
            LifeRayWebServicesExample.LiferayUserService.updateUserResponse1 retVal = ((LifeRayWebServicesExample.LiferayUserService.UserServiceSoap)(this)).updateUser1(inValue);
            return retVal.updateUserReturn;
        }
    }
}
